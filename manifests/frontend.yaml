apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: medhealth
spec:
  replicas: __MINREPLICAS__
  selector:
    matchLabels:
      app: frontend
  strategy:
    rollingUpdate:
      maxSurge: 75%
      maxUnavailable: 75%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
        group: medhealth
    spec:
      nodeSelector:
        agentpool: __AGENTPOOL__
      containers:
        - name: frontend
          image: zsyshacr.azurecr.io/frontend:__TAG__
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: appport
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "__MEMORY__"
              cpu: "__CPU__"
            limits:
              memory: "__MEMORY__"
              cpu: "__CPU__"
      tolerations:
        - key: workload-type
          operator: Equal
          value: app
          effect: NoSchedule                      
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: medhealth
  labels:
    app: frontend
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: 'true'
    service.beta.kubernetes.io/azure-load-balancer-tcp-idle-timeout: '30'
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: frontend
  type: LoadBalancer